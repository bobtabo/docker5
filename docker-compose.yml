version: '3.8'

volumes:
    phpsocket:

services:
  nginx:
    container_name: ${NGINX_CONTAINER}
    build: ./nginx
    ports:
      - '${NGINX_HTTP_PORT}:80'
      - '${NGINX_HTTPS_PORT}:443'
    volumes:
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/templates:/etc/nginx/templates
      - ./src:/home/docker
      - phpsocket:/var/run
    depends_on:
      - php
    environment:
      - APP_NAME=${APP_NAME}
      - SERVER_NAME=${SERVER_NAME}
      - NGINX_CERTS_NAME=${NGINX_CERTS_NAME}

  php:
    container_name: ${PHP_CONTAINER}
    build: ./php
    ports:
      - '${PHP_XDEBUG_PORT}:9001'
    volumes:
      - ./src:/home/docker
      - phpsocket:/var/run
    depends_on:
      - mysql
      - redis

  mysql:
    image: mysql:8
    container_name: ${MYSQL_CONTAINER}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ./mysql/master/my.cnf:/etc/mysql/my.cnf
      - ./data/mysql:/var/lib/mysql
      - ./mysql/master/init.sql:/docker-entrypoint-initdb.d/init.sql

  mysql-slave:
    image: mysql:8
    container_name: ${MYSQL_SLAVE_CONTAINER}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    ports:
      - "${MYSQL_SLAVE_PORT}:3306"
    depends_on:
      - mysql
    tmpfs:
      - /var/lib/mysql
    volumes:
      - ./mysql/slave/my.cnf:/etc/mysql/my.cnf
      - ./mysql/slave/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:latest
    container_name: ${REDIS_CONTAINER}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - "./data/redis:/data"

  mailhog:
      image: mailhog/mailhog
      container_name: ${MAILHOG_CONTAINER}
      ports:
        - "${MAILHOG_PORT}:8025"

  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: ${PMA_CONTAINER}
      depends_on:
        - mysql
      environment:
        - PMA_ARBITRARY=${PMA_ARBITRARY}
        - PMA_HOSTS=${PMA_HOSTS}
        - PMA_USER=${PMA_USER}
        - PMA_PASSWORD=${PMA_PASSWORD}
      ports:
        - "${PMA_PORT}:80"
      volumes:
        - ./data/phpmyadmin/sessions:/sessions

  mongo:
    image: mongo
    container_name: ${MONGO_CONTAINER}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ./data/mongo:/data/db

  mongo-express:
    image: mongo-express
    container_name: ${MONGO_EX_CONTAINER}
    ports:
      - "${MONGO_EX_PORT}:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EX_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EX_PASSWORD}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_EX_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_EX_ADMINPASSWORD}
    depends_on:
      - mongo

  redmon:
    image: vieux/redmon
    container_name: ${REDMON_CONTAINER}
    links:
      - redis:redis
    ports:
      - "${REDMON_PORT}:4567"
    command: -r redis://redis:6379
